---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: scc-admin
  namespace: intellilogs
imagePullSecrets:
- name: myquaycred
# oc adm policy add-scc-to-user privileged -z scc-admin -n intellilogs 

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  name: system:openshift:scc:privileged
  namespace: intellilogs
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:openshift:scc:privileged
subjects:
- kind: ServiceAccount
  name: scc-admin
  namespace: intellilogs

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-aiapp
  namespace: intellilogs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-aiapp
  template:
    metadata:
      labels:
        app: backend-aiapp
    spec:
      # RUN AS PRIVILLEGED USER; BECAUSE /tmp/logs was created in the docker in root mode.
      # the image needs to run in privilleged mode in order to save CSV file in that dir. 
      # TODO: Need to create the docker image in a different way so that it is run as user.
      securityContext:
        runAsUser: 0
        runAsNonRoot: false
      serviceAccountName: scc-admin
      initContainers:
        - name: init-download-model
          image: curlimages/curl:latest
          command: [ "sh", "-c" ]
          args:
            - >
              mkdir -p /mnt/models/logclassifier/1 &&
              curl -L https://huggingface.co/alinahid477/ilab-trained-granite-7b-lab/resolve/main/log_classifier.onnx
              -o /mnt/models/logclassifier/1/model.onnx
          volumeMounts:
            - name: model-volume
              mountPath: /mnt/models/logclassifier/1
      containers:
        - name: backend-aiapp
          image: quay.io/rh-ee-anahid/backend-aiapp:v1
          ports:
            - containerPort: 8000
          envFrom:
            - configMapRef:
                name: intellilog-envvars
          volumeMounts:
            - name: model-volume
              mountPath: /mnt/models/logclassifier/1
      volumes:
        - name: model-volume
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: backend-aiapp
  namespace: intellilogs
spec:
  selector:
    app: backend-aiapp
  ports:
    - port: 8000
      targetPort: 8000
  type: ClusterIP
